#include <bits/stdc++.h> 
string getWinner(vector < string > & votes) {
  unordered_map<string,int> voteCount;
  string maxVoteCandidate = "";
  int maxVotes = 0;

  for(string candidate : votes){
      voteCount[candidate]++;
      if(voteCount[candidate]>maxVotes || (voteCount[candidate]==maxVotes && candidate<maxVoteCandidate)){
          maxVotes= voteCount[candidate];
          maxVoteCandidate=candidate;
      }
  } 
  return maxVoteCandidate;
}



Problem Statement
You have been given an array/list of “VOTES” which contains the name of the candidates where each entry represents the name of the candidate who got the vote.
You are supposed to find the name of the candidate who received the maximum number of votes. If there is a tie, then print the lexicographically smaller name.
Detailed explanation ( Input/output format, Notes, Images )
keyboard_arrow_down
Constraints :
1 <= T <= 50
1 <= ‘N’ <= 10^3
1 <= |NAME| <= 20

Where ‘N’ is the number of votes cast and |NAME| denotes the length of the candidate’s name. 

Time Limit: 1 sec
Sample Input 1 :
2
4
John
Tim
Marry
John
2
Rahul
Ankur
Sample Output 1 :
John
Ankur
Explanation For Sample Intput 1 :
For the first test case, “John” has received the maximum number of votes (2 votes).

For the second test case, both “Rahul” and “Ankur” has received one vote each since “Ankur” is lexicographically smaller than “Rahul”, print “Ankur”.
Sample Input 2 :
2
1
Arya
2
Atul
Atul    
Sample Output 2 :
Arya
Atul
Explanation For Sample Intput 2 :
For the first test case, “Arya” is the only candidate in the election who has received the maximum number of votes.  

For the second test case, “Atul” has received all the votes.

/*
Following is the class structure of the Node class:
class Node
{
public:
    int data;
    Node *left, *right;
    Node()
   {
        this->data = 0;
        left = NULL;
    }
    Node(int data)
    {
        this->data = data; 
        this->left = NULL;
        this->right = NULL;
    }
     Node(int data, Node* left, Node* right)
    {
        this->data = data;
        this->left = left;
        this->right = right;
    }
};
*/

Node* createTree(vector<int>& arr) {
 if (arr.empty()) {
 return nullptr;
}

Node* root = new Node(arr[0]);
queue<Node*> q;
q.push(root);

int i = 1;
while (!q.empty() && i < arr.size()) {
Node* curr = q.front();
q.pop();

if (i < arr.size() && arr[i] != -1) {
 Node* leftChild = new Node(arr[i]);
 curr->left = leftChild;
 q.push(leftChild);
 }
 i++;

if (i < arr.size() && arr[i] !=-1) {
  Node *rightChild =new Node(arr[i]);
  curr->right =rightChild;
  q.push(rightChild);
}
i++;
}

return root;
}
